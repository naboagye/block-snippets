{"ast":null,"code":"'use strict';\n\nmodule.exports = table;\n\nvar position = require('unist-util-position');\n\nvar wrap = require('../wrap');\n\nvar all = require('../all');\n\nfunction table(h, node) {\n  var rows = node.children;\n  var index = rows.length;\n  var align = node.align || [];\n  var alignLength = align.length;\n  var result = [];\n  var pos;\n  var row;\n  var out;\n  var name;\n  var cell;\n\n  while (index--) {\n    row = rows[index].children;\n    name = index === 0 ? 'th' : 'td';\n    pos = alignLength || row.length;\n    out = [];\n\n    while (pos--) {\n      cell = row[pos];\n      out[pos] = h(cell, name, {\n        align: align[pos]\n      }, cell ? all(h, cell) : []);\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true));\n  }\n\n  return h(node, 'table', wrap([h(result[0].position, 'thead', wrap([result[0]], true))].concat(result[1] ? h({\n    start: position.start(result[1]),\n    end: position.end(result[result.length - 1])\n  }, 'tbody', wrap(result.slice(1), true)) : []), true));\n}","map":{"version":3,"names":["module","exports","table","position","require","wrap","all","h","node","rows","children","index","length","align","alignLength","result","pos","row","out","name","cell","concat","start","end","slice"],"sources":["/Users/The5AMDev/web3/gif-portal-starter/node_modules/mdast-util-to-hast/lib/handlers/table.js"],"sourcesContent":["'use strict'\n\nmodule.exports = table\n\nvar position = require('unist-util-position')\nvar wrap = require('../wrap')\nvar all = require('../all')\n\nfunction table(h, node) {\n  var rows = node.children\n  var index = rows.length\n  var align = node.align || []\n  var alignLength = align.length\n  var result = []\n  var pos\n  var row\n  var out\n  var name\n  var cell\n\n  while (index--) {\n    row = rows[index].children\n    name = index === 0 ? 'th' : 'td'\n    pos = alignLength || row.length\n    out = []\n\n    while (pos--) {\n      cell = row[pos]\n      out[pos] = h(cell, name, {align: align[pos]}, cell ? all(h, cell) : [])\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: position.start(result[1]),\n                end: position.end(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,KAAjB;;AAEA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,qBAAD,CAAtB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,SAAD,CAAlB;;AACA,IAAIE,GAAG,GAAGF,OAAO,CAAC,QAAD,CAAjB;;AAEA,SAASF,KAAT,CAAeK,CAAf,EAAkBC,IAAlB,EAAwB;EACtB,IAAIC,IAAI,GAAGD,IAAI,CAACE,QAAhB;EACA,IAAIC,KAAK,GAAGF,IAAI,CAACG,MAAjB;EACA,IAAIC,KAAK,GAAGL,IAAI,CAACK,KAAL,IAAc,EAA1B;EACA,IAAIC,WAAW,GAAGD,KAAK,CAACD,MAAxB;EACA,IAAIG,MAAM,GAAG,EAAb;EACA,IAAIC,GAAJ;EACA,IAAIC,GAAJ;EACA,IAAIC,GAAJ;EACA,IAAIC,IAAJ;EACA,IAAIC,IAAJ;;EAEA,OAAOT,KAAK,EAAZ,EAAgB;IACdM,GAAG,GAAGR,IAAI,CAACE,KAAD,CAAJ,CAAYD,QAAlB;IACAS,IAAI,GAAGR,KAAK,KAAK,CAAV,GAAc,IAAd,GAAqB,IAA5B;IACAK,GAAG,GAAGF,WAAW,IAAIG,GAAG,CAACL,MAAzB;IACAM,GAAG,GAAG,EAAN;;IAEA,OAAOF,GAAG,EAAV,EAAc;MACZI,IAAI,GAAGH,GAAG,CAACD,GAAD,CAAV;MACAE,GAAG,CAACF,GAAD,CAAH,GAAWT,CAAC,CAACa,IAAD,EAAOD,IAAP,EAAa;QAACN,KAAK,EAAEA,KAAK,CAACG,GAAD;MAAb,CAAb,EAAkCI,IAAI,GAAGd,GAAG,CAACC,CAAD,EAAIa,IAAJ,CAAN,GAAkB,EAAxD,CAAZ;IACD;;IAEDL,MAAM,CAACJ,KAAD,CAAN,GAAgBJ,CAAC,CAACE,IAAI,CAACE,KAAD,CAAL,EAAc,IAAd,EAAoBN,IAAI,CAACa,GAAD,EAAM,IAAN,CAAxB,CAAjB;EACD;;EAED,OAAOX,CAAC,CACNC,IADM,EAEN,OAFM,EAGNH,IAAI,CACF,CAACE,CAAC,CAACQ,MAAM,CAAC,CAAD,CAAN,CAAUZ,QAAX,EAAqB,OAArB,EAA8BE,IAAI,CAAC,CAACU,MAAM,CAAC,CAAD,CAAP,CAAD,EAAc,IAAd,CAAlC,CAAF,EAA0DM,MAA1D,CACEN,MAAM,CAAC,CAAD,CAAN,GACIR,CAAC,CACC;IACEe,KAAK,EAAEnB,QAAQ,CAACmB,KAAT,CAAeP,MAAM,CAAC,CAAD,CAArB,CADT;IAEEQ,GAAG,EAAEpB,QAAQ,CAACoB,GAAT,CAAaR,MAAM,CAACA,MAAM,CAACH,MAAP,GAAgB,CAAjB,CAAnB;EAFP,CADD,EAKC,OALD,EAMCP,IAAI,CAACU,MAAM,CAACS,KAAP,CAAa,CAAb,CAAD,EAAkB,IAAlB,CANL,CADL,GASI,EAVN,CADE,EAaF,IAbE,CAHE,CAAR;AAmBD"},"metadata":{},"sourceType":"script"}