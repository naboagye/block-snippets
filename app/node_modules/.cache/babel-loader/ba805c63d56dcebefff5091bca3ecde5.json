{"ast":null,"code":"'use strict';\n\nvar locate = require('../locate/code-inline');\n\nmodule.exports = inlineCode;\ninlineCode.locator = locate;\nvar lineFeed = 10; //  '\\n'\n\nvar space = 32; // ' '\n\nvar graveAccent = 96; //  '`'\n\nfunction inlineCode(eat, value, silent) {\n  var length = value.length;\n  var index = 0;\n  var openingFenceEnd;\n  var closingFenceStart;\n  var closingFenceEnd;\n  var code;\n  var next;\n  var found;\n\n  while (index < length) {\n    if (value.charCodeAt(index) !== graveAccent) {\n      break;\n    }\n\n    index++;\n  }\n\n  if (index === 0 || index === length) {\n    return;\n  }\n\n  openingFenceEnd = index;\n  next = value.charCodeAt(index);\n\n  while (index < length) {\n    code = next;\n    next = value.charCodeAt(index + 1);\n\n    if (code === graveAccent) {\n      if (closingFenceStart === undefined) {\n        closingFenceStart = index;\n      }\n\n      closingFenceEnd = index + 1;\n\n      if (next !== graveAccent && closingFenceEnd - closingFenceStart === openingFenceEnd) {\n        found = true;\n        break;\n      }\n    } else if (closingFenceStart !== undefined) {\n      closingFenceStart = undefined;\n      closingFenceEnd = undefined;\n    }\n\n    index++;\n  }\n\n  if (!found) {\n    return;\n  }\n  /* istanbul ignore if - never used (yet) */\n\n\n  if (silent) {\n    return true;\n  } // Remove the initial and final space (or line feed), iff they exist and there\n  // are non-space characters in the content.\n\n\n  index = openingFenceEnd;\n  length = closingFenceStart;\n  code = value.charCodeAt(index);\n  next = value.charCodeAt(length - 1);\n  found = false;\n\n  if (length - index > 2 && (code === space || code === lineFeed) && (next === space || next === lineFeed)) {\n    index++;\n    length--;\n\n    while (index < length) {\n      code = value.charCodeAt(index);\n\n      if (code !== space && code !== lineFeed) {\n        found = true;\n        break;\n      }\n\n      index++;\n    }\n\n    if (found === true) {\n      openingFenceEnd++;\n      closingFenceStart--;\n    }\n  }\n\n  return eat(value.slice(0, closingFenceEnd))({\n    type: 'inlineCode',\n    value: value.slice(openingFenceEnd, closingFenceStart)\n  });\n}","map":{"version":3,"names":["locate","require","module","exports","inlineCode","locator","lineFeed","space","graveAccent","eat","value","silent","length","index","openingFenceEnd","closingFenceStart","closingFenceEnd","code","next","found","charCodeAt","undefined","slice","type"],"sources":["/Users/The5AMDev/web3/gif-portal-starter/node_modules/remark-parse/lib/tokenize/code-inline.js"],"sourcesContent":["'use strict'\n\nvar locate = require('../locate/code-inline')\n\nmodule.exports = inlineCode\ninlineCode.locator = locate\n\nvar lineFeed = 10 //  '\\n'\nvar space = 32 // ' '\nvar graveAccent = 96 //  '`'\n\nfunction inlineCode(eat, value, silent) {\n  var length = value.length\n  var index = 0\n  var openingFenceEnd\n  var closingFenceStart\n  var closingFenceEnd\n  var code\n  var next\n  var found\n\n  while (index < length) {\n    if (value.charCodeAt(index) !== graveAccent) {\n      break\n    }\n\n    index++\n  }\n\n  if (index === 0 || index === length) {\n    return\n  }\n\n  openingFenceEnd = index\n  next = value.charCodeAt(index)\n\n  while (index < length) {\n    code = next\n    next = value.charCodeAt(index + 1)\n\n    if (code === graveAccent) {\n      if (closingFenceStart === undefined) {\n        closingFenceStart = index\n      }\n\n      closingFenceEnd = index + 1\n\n      if (\n        next !== graveAccent &&\n        closingFenceEnd - closingFenceStart === openingFenceEnd\n      ) {\n        found = true\n        break\n      }\n    } else if (closingFenceStart !== undefined) {\n      closingFenceStart = undefined\n      closingFenceEnd = undefined\n    }\n\n    index++\n  }\n\n  if (!found) {\n    return\n  }\n\n  /* istanbul ignore if - never used (yet) */\n  if (silent) {\n    return true\n  }\n\n  // Remove the initial and final space (or line feed), iff they exist and there\n  // are non-space characters in the content.\n  index = openingFenceEnd\n  length = closingFenceStart\n  code = value.charCodeAt(index)\n  next = value.charCodeAt(length - 1)\n  found = false\n\n  if (\n    length - index > 2 &&\n    (code === space || code === lineFeed) &&\n    (next === space || next === lineFeed)\n  ) {\n    index++\n    length--\n\n    while (index < length) {\n      code = value.charCodeAt(index)\n\n      if (code !== space && code !== lineFeed) {\n        found = true\n        break\n      }\n\n      index++\n    }\n\n    if (found === true) {\n      openingFenceEnd++\n      closingFenceStart--\n    }\n  }\n\n  return eat(value.slice(0, closingFenceEnd))({\n    type: 'inlineCode',\n    value: value.slice(openingFenceEnd, closingFenceStart)\n  })\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}