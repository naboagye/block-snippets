{"ast":null,"code":"import { rehype } from 'rehype';\nimport rehypePrism from 'rehype-prism-plus';\nexport var processHtml = function processHtml(html, plugins) {\n  if (plugins === void 0) {\n    plugins = [[rehypePrism, {\n      ignoreMissing: true\n    }]];\n  }\n\n  return rehype().data('settings', {\n    fragment: true\n  }).use([...plugins]).processSync(\"\" + html).toString();\n};\nexport function htmlEncode(sHtml) {\n  return sHtml.replace(/```(tsx?|jsx?|html|xml)(.*)\\s+([\\s\\S]*?)(\\s.+)?```/g, str => {\n    return str.replace(/[<&\"]/g, c => ({\n      '<': '&lt;',\n      '>': '&gt;',\n      '&': '&amp;',\n      '\"': '&quot;'\n    })[c]);\n  }).replace(/[<&\"]/g, c => ({\n    '<': '&lt;',\n    '>': '&gt;',\n    '&': '&amp;',\n    '\"': '&quot;'\n  })[c]);\n}\nexport function stopPropagation(e) {\n  e.stopPropagation();\n  e.preventDefault();\n}","map":{"version":3,"sources":["../src/utils.ts"],"names":["processHtml","plugins","ignoreMissing","fragment","str","c","e"],"mappings":"AACA,SAAA,MAAA,QAAA,QAAA;AACA,OAAA,WAAA,MAAA,mBAAA;AAEA,OAAO,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAAA,IAAA,EAAA,OAAA,EAAqF;EAAA,IAAtEC,OAAsE,KAAA,KAAA,CAAA,EAAA;IAAtEA,OAAsE,GAA7C,CAAC,CAAA,WAAA,EAAc;MAAEC,aAAa,EAAE;IAAjB,CAAd,CAAD,CAAzBD;EAAsE;;EAC9G,OAAO,MAAM,GAAN,IAAA,CAAA,UAAA,EACa;IAAEE,QAAQ,EAAE;EAAZ,CADb,EAAA,GAAA,CAEA,CAAC,GAFD,OAEA,CAFA,EAAA,WAAA,CAAA,KAAA,IAAA,EAAP,QAAO,EAAP;AADK,CAAA;AAQP,OAAO,SAAA,UAAA,CAAA,KAAA,EAAmC;EACxC,OAAO,KAAK,CAAL,OAAA,CAAA,qDAAA,EAC4DC,GAAD,IAAiB;IAC/E,OAAO,GAAG,CAAH,OAAA,CAAA,QAAA,EAEJC,CAAD,IAAgB,CAAC;MAAE,KAAF,MAAA;MAAe,KAAf,MAAA;MAA4B,KAA5B,OAAA;MAA0C,KAAK;IAA/C,CAAD,EAFlB,CAEkB,CAFX,CAAP;EAFG,CAAA,EAAA,OAAA,CAAA,QAAA,EASFA,CAAD,IAAgB,CAAC;IAAE,KAAF,MAAA;IAAe,KAAf,MAAA;IAA4B,KAA5B,OAAA;IAA0C,KAAK;EAA/C,CAAD,EATpB,CASoB,CATb,CAAP;AAWD;AAED,OAAO,SAAA,eAAA,CAAA,CAAA,EAAsE;EAC3EC,CAAC,CAADA,eAAAA;EACAA,CAAC,CAADA,cAAAA;AACD","sourcesContent":["import { PluggableList } from 'unified';\nimport { rehype } from 'rehype';\nimport rehypePrism from 'rehype-prism-plus';\n\nexport const processHtml = (html: string, plugins: PluggableList = [[rehypePrism, { ignoreMissing: true }]]) => {\n  return rehype()\n    .data('settings', { fragment: true })\n    .use([...plugins])\n    .processSync(`${html}`)\n    .toString();\n};\n\nexport function htmlEncode(sHtml: string) {\n  return sHtml\n    .replace(/```(tsx?|jsx?|html|xml)(.*)\\s+([\\s\\S]*?)(\\s.+)?```/g, (str: string) => {\n      return str.replace(\n        /[<&\"]/g,\n        (c: string) => (({ '<': '&lt;', '>': '&gt;', '&': '&amp;', '\"': '&quot;' } as Record<string, string>)[c]),\n      );\n    })\n    .replace(\n      /[<&\"]/g,\n      (c: string) => (({ '<': '&lt;', '>': '&gt;', '&': '&amp;', '\"': '&quot;' } as Record<string, string>)[c]),\n    );\n}\n\nexport function stopPropagation(e: React.KeyboardEvent<HTMLTextAreaElement>) {\n  e.stopPropagation();\n  e.preventDefault();\n}\n"]},"metadata":{},"sourceType":"module"}