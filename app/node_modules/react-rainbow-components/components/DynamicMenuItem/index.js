"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _MenuItem = _interopRequireDefault(require("../MenuItem"));

/**
 * A DynamicMenuItem is a menu item meant to be used in the action column of Table. This component adds two new props
 * that allows to render the item conditionally based on row data.
 * @category DataView
 */
var DynamicMenuItem = function DynamicMenuItem(props) {
  var renderIf = props.renderIf,
      disabled = props.disabled,
      row = props.rowData,
      rest = (0, _objectWithoutProperties2["default"])(props, ["renderIf", "disabled", "rowData"]);
  var shouldRender = typeof renderIf === 'function' ? renderIf({
    row: row
  }) : true;
  var isDisabled = typeof disabled === 'function' ? disabled({
    row: row
  }) : false;

  if (shouldRender) {
    // eslint-disable-next-line react/jsx-props-no-spreading
    return /*#__PURE__*/_react["default"].createElement(_MenuItem["default"], (0, _extends2["default"])({}, rest, {
      disabled: isDisabled
    }));
  }

  return null;
};

DynamicMenuItem.propTypes = {
  /** Text of the menu item. */
  label: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].node]),

  /** The variant changes the type of menu item. Accepted variants include default and header.
   * This value defaults to default. */
  variant: _propTypes["default"].oneOf(['default', 'header']),

  /** The icon to show if it is passed. It must be a svg icon or a font icon. */
  icon: _propTypes["default"].node,

  /** Describes the position of the icon with respect to body. Options include left and right.
   * This value defaults to left. */
  iconPosition: _propTypes["default"].oneOf(['left', 'right']),

  /** The action triggered when the menu item is clicked. */
  onClick: _propTypes["default"].func,

  /** Displays tooltip text when the mouse moves over the element. */
  title: _propTypes["default"].string,

  /** A CSS class for the outer element, in addition to the component's base classes. */
  className: _propTypes["default"].string,

  /** An object with custom style applied to the outer element. */
  style: _propTypes["default"].object,

  /** An object containing the data of the row where this item is rendered. */
  rowData: _propTypes["default"].object,

  /** A function that receives the row data and returns if the item should be visible. */
  renderIf: _propTypes["default"].func,

  /** A function that receiver the row data and returns if the item should be disabled. */
  disabled: _propTypes["default"].func
};
DynamicMenuItem.defaultProps = {
  label: null,
  variant: 'default',
  icon: null,
  iconPosition: 'left',
  onClick: function onClick() {},
  title: undefined,
  className: undefined,
  style: undefined,
  rowData: undefined,
  renderIf: function renderIf() {
    return true;
  },
  disabled: function disabled() {
    return false;
  }
};
var _default = DynamicMenuItem;
exports["default"] = _default;