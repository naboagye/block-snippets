name: Rust

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

defaults:
  run:
    working-directory: app

env:
  CARGO_TERM_COLOR: always
  SOLANA_VERSION: v1.9.9
  ANCHOR_VERSION: 0.24.2

jobs:
  vercel:
    runs-on: ubuntu-latest
    container: projectserum/build:v0.24.2

    steps:
      - uses: actions/checkout@v3
      - name: List rustup toolchains
        run: rustup toolchain list
      - name: Set default toolchain
        run: rustup default stable
      - name: List rustup toolchains
        run: rustup toolchain list
      - name: Generate new keygen
        run: solana-keygen new -o /home/solana/id.json
        working-directory: ./
      - name: Set solana target cluster to local
        run: solana config set --url localhost
      - name: Set solana target cluster to local
        run: solana config set --keypair /home/solana/id.json
        working-directory: ./
      - name: Check solana config
        run: solana config get
        working-directory: ./
      # - name: Get fake coins and check balance
      #   run: |
      #     solana airdrop 2
      #     solana balance
        # working-directory: ./
      - name: Install npm dependencies
        run: npm install
      # - name: Build
      #   run: anchor build
        working-directory: ./
      - name: Install anchor
        run: npm install -g @project-serum/anchor @solana/web3.js
        working-directory: ./
      - name: Run tests
        run: anchor test
        working-directory: ./
      # - name: Deploy to Devnet
      #   run: anchor deploy
      #   working-directory: ./
      # - name: Setup Node 14
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: "14"

      # - name: Build
      #   run: |
      #     npm install
      #     npm run build
      # - run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      #   shell: bash
      # - run: echo "/home/runner/.cargo/bin" >> $GITHUB_PATH
      #   shell: bash
      # - run: curl -sSfL https://release.solana.com/$SOLANA_VERSION/install | sh
      #   shell: bash
      # - run: echo "/home/runner/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
      #   shell: bash
      # - run: npm i -g @project-serum/anchor-cli@$ANCHOR_VERSION ts-mocha typescript
      # - run: solana-keygen new -o /home/solana/id.json
      # - name: Run tests
      #   run: anchor test
      #   working-directory: ./
      # - name: Deploy to Devnet
      #   run: anchor deploy
      #   working-directory: ./
      #     - name: Copy IDL
      #       run:

      #     - name: Run Tests Locally
      #       run: npm run test

  build_test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: setup node
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}

      # install applicaion dependencies
      - name: Install dependencies
        run: |
          npm install
      # build and test the apps
      - name: build
        run: |
          npm run build
          npm test
  push_to_Docker_Hub:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # build docker image and push to docker hub
    # only if the app build and test successfully
    needs: [build_test]

    steps:
      - name: checkout repo
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.REACTUSERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.REACTUSERNAME }}/block-snippets:latest

      - name: Run the image in a container
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ secrets.REACTUSERNAME }}/block-snippets:latest
          run: |
            echo "running the docker image"
  push_to_vercel:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: amondnet/vercel-action@v20
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}} 
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}
          vercel-args: "--prod"

